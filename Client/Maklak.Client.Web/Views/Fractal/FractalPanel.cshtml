@model Maklak.Client.Models.FractalModel

@{
    string panelClass = string.Empty;
    string controlClass = string.Empty;
    string contentClass = string.Empty;
    string placeHolderClass = string.Empty;

    string fractalPanelKey = this.Model.ParentKey;
    string nextFractalPanelKey = this.Model.NextKey;

    string panelFormID = string.Format("FractalPanel_{0}", fractalPanelKey);

    string fractalPanelRecursiveAction = this.Model.Action;
    string fractalPanelRecursiveController = this.Model.Controller;

    panelClass = this.Model.IsRoot ? "FractalRootPanel" : "FractalPanel";
    controlClass = this.Model.ControlClass;
    contentClass = this.Model.ContentClass;

    bool hasChildPanel = this.Model.HasChildPanel;

    RouteValueDictionary routPanelValues = new RouteValueDictionary();
    routPanelValues.Add("Key", nextFractalPanelKey); /*меняется ключ и следующая FractalPanel модель привязывается к дочернему ключу*/

}



<div class="@panelClass" id="@panelFormID">

    

        <div class="@controlClass">

            @*Control*@                     

            @* Отображение контрола для FractalPanel-a*@
            @Html.Action(this.Model.FractalControlAction, this.Model.FractalController,  this.Model)
            
            
        </div>
        <div class="@contentClass">

            @*Content*@

            @{
                if (hasChildPanel)
                {
                    // Рекурсивное отображение вложенных FractalPanel-ов
                    Html.RenderAction(fractalPanelRecursiveAction, fractalPanelRecursiveController, routPanelValues);
                }
                else
                {
                    // Отображение формы для содержимого последнего FractalPanel-a
                    Html.RenderAction(this.Model.FractalContentAction, this.Model.FractalController, this.Model);                    
                    
                }

            }
        </div>
    

</div>
    
