
@model Maklak.Models.TabStripModel



@{
    Maklak.Models.DataSets.ModelDS.TabDataDataTable dataTable = this.Model.StripData;
    int tabWidth = 130;
    int gapWidth = 2;
    int tabHeight = 33;
    int borderWidth = 1;
    bool isRoot = this.Model.Key == "CATEGORY";
    int tabsStubLeft = isRoot ? 0 : dataTable.Rows.Count * (tabWidth + gapWidth) + gapWidth + borderWidth * dataTable.Rows.Count * 2;
    int tabsStubTop = isRoot ? dataTable.Rows.Count * (tabHeight + gapWidth) + gapWidth + borderWidth * dataTable.Rows.Count * 2 : 0;


    string tabStripPrefix = isRoot ? "left" : "top";
    string tabStripClass = string.Format("{0}TabsStrip", tabStripPrefix);
    string tabGapClass = string.Format("{0}TabGap", tabStripPrefix);
    string tabGapFirstClass = string.Format("{0}TabFirstGap", tabStripPrefix);
    string tabStubClass = string.Format("{0}TabStub", tabStripPrefix);
    string tabCornerClass = string.Format("{0}TabCorner", tabStripPrefix);

    string actionName = string.Format("{0}TabElement", tabStripPrefix);

    string selectedValue = string.Format("{0}_SelectedValue", this.Model.Key);
    string tabId = string.Format("{0}_TabStrip", this.Model.Key);    
    string keyName = string.Format("{0}_Key", this.Model.Key);
    //string tabTestClass = string.Format("{0}TestClass", tabStripPrefix);

    string callbackEvent = string.Format("{0}TabMgr.OnComplete()", tabStripPrefix);
    string stubLeft = string.Format("{0}px", tabsStubLeft.ToString());
    string stubTop = string.Format("{0}px", tabsStubTop.ToString());



    using (Ajax.BeginForm("TabPanel", // запрос уходит на родительский TabPanel
                           null,
                           new AjaxOptions()
                           {
                               HttpMethod = "POST",
                               InsertionMode = InsertionMode.Replace,
                               UpdateTargetId = this.Model.TabPanelID // id обновляемого элемента (приходит из TabPanel)
                                                                      //,
                                                                      //OnComplete = callbackEvent
                                   },
                           new { id = tabId }))
    {

        <div class="@tabStripClass" style="min-width:@stubLeft;">
            @*<div class="@tabTestClass"></div>*@
            <div class="@tabCornerClass"></div>

            <div class="@tabGapFirstClass"></div>

            @{foreach (Maklak.Models.DataSets.ModelDS.TabDataRow row in dataTable)
                {
                    Maklak.Models.TabRowModel rm = new Maklak.Models.TabRowModel();
                    rm.Row = row;
                    rm.Row.Form_Id = tabId;
                    RouteValueDictionary dict = new RouteValueDictionary();
                    dict.Add("tabRow", rm);


                    Html.RenderAction(actionName, "Tab", dict);


                    <div class="@tabGapClass"></div>
                }
            }

            <div class="@tabStubClass" style="left:@stubLeft;top:@stubTop;"></div>

            @Html.HiddenFor(m => m.SID)
            @Html.HiddenFor(m => m.Key, new { id = keyName })


        </div>

                }


}
