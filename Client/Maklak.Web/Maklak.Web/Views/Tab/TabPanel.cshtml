@model Maklak.Models.TabPanelModel

@{ 
    string panelClass = string.Empty;
    string stripClass = string.Empty;
    string contentClass = string.Empty;
    string classPrefix = string.Empty;


    string tabPanelKey = this.Model.TabPanelKey;
    string tabStripId = string.Format("TabStrip_{0}", tabPanelKey);
    string contentFormId = "mainForm";
    string nextTabPanelKey = this.Model.NextTabPanelKey;
    string tabPanelID = string.Format("TabPanel_{0}", tabPanelKey);
    string tabPanelRecursiveAction = this.Model.Action;
    string tabPanelRecursiveController = this.Model.Controller;


    switch (this.Model.DokPosition)
    {
        case Maklak.Models.TabPanelModel.DOKPOSITION.LEFT:
            classPrefix = "left";
            break;
        case Maklak.Models.TabPanelModel.DOKPOSITION.TOP:
            classPrefix = "top";
            break;
        case Maklak.Models.TabPanelModel.DOKPOSITION.RIGHT:
            classPrefix = "right";
            break;
        case Maklak.Models.TabPanelModel.DOKPOSITION.BOTTOM:
            classPrefix = "bottom";
            break;
    }

    panelClass = string.Format("{0}TabPanel", classPrefix);
    stripClass = string.Format("{0}StripArea", classPrefix);
    contentClass = string.Format("{0}ContentArea", classPrefix);

    bool hasChildPanel = this.Model.HasChildPanel;
    RouteValueDictionary routPanelValues = new RouteValueDictionary();
    routPanelValues.Add("Key", nextTabPanelKey); /*меняется ключ и следующая TabPanel модель привязывается к дочернему ключу*/

    RouteValueDictionary routStripValues = new RouteValueDictionary();
    routStripValues.Add("Key", tabPanelKey); /* название модели для TabStrip совпадает с ключом текущей модели*/
    

 }

<div id="@tabPanelID" class="@panelClass">

    <div class="@stripClass">
        @{
                using (Ajax.BeginForm(tabPanelRecursiveAction, // запрос уходит на TabPanel
                      null,
                      new AjaxOptions()
                      {
                          HttpMethod = "POST",
                          InsertionMode = InsertionMode.Replace,
                          UpdateTargetId = tabPanelID // id обновляемого элемента 
                                                      //,
                                                      //OnComplete = callbackEvent
                      },
                      new { id = tabStripId }))
                {
                    @*Strip*@
                    @Html.Action(this.Model.ControlAction, this.Model.ControlController, routStripValues)

                    @Html.HiddenFor(m => m.SID)
            }
        }
    </div>
    <div class="@contentClass">
        @*Content*@
        @{
            if (hasChildPanel)
            {
                //Рекурсивное отображение вложенных TabPanel-ов
                Html.RenderAction(tabPanelRecursiveAction, tabPanelRecursiveController, routPanelValues);
            }
            else
            {
                // Отображение формы для содержимого последнего TabPanel-a
                using (Ajax.BeginForm(this.Model.ContentAction, this.Model.ContentController,
                          null,
                          new AjaxOptions()
                          {
                              HttpMethod = "POST",
                              InsertionMode = InsertionMode.Replace,
                              UpdateTargetId = contentFormId // id обновляемого элемента
                                                             //,
                                                             //OnComplete = callbackEvent
                          },
                          new { id = contentFormId }))
                {
                @*Отображение содержимого*@
                @Html.Action(this.Model.ContentAction, this.Model.ContentController)

                @Html.HiddenFor(m => m.SID)
                    }
                }

            }
    </div>
</div>

