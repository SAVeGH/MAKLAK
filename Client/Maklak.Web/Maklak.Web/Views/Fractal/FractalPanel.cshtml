@model Maklak.Models.FractalModel

@{
    string panelClass = string.Empty;
    string stripClass = string.Empty;
    string contentClass = string.Empty;
    string classPrefix = string.Empty;


    string tabPanelKey = this.Model.TabPanelKey;
    string tabStripId = string.Format("TabStrip_{0}", tabPanelKey);
    string contentFormId = "mainForm";
    string nextTabPanelKey = this.Model.NextTabPanelKey;
    string tabPanelID = string.Format("TabPanel_{0}", tabPanelKey);
    string tabPanelRecursiveAction = this.Model.Action;
    string tabPanelRecursiveController = this.Model.Controller;
    

    panelClass = string.Format("{0}FractalPanel", this.Model.ClassPrefix);
    stripClass = this.Model.ControlClass;
    contentClass = this.Model.ContentClass;

    bool hasChildPanel = this.Model.HasChildPanel;
    bool isFractalRoot = this.Model.IsRoot;
    RouteValueDictionary routPanelValues = new RouteValueDictionary();
    routPanelValues.Add("Key", nextTabPanelKey); /*меняется ключ и следующая TabPanel модель привязывается к дочернему ключу*/

    RouteValueDictionary routStripValues = new RouteValueDictionary();
    routStripValues.Add("Key", tabPanelKey); /* название модели для TabStrip совпадает с ключом текущей модели*/


}

@if (isFractalRoot){ @Html.Raw("<div class=\"TabShield\">"); }

<div id="@tabPanelID" class="@panelClass">

    <div class="@stripClass">
        @{
            using (Ajax.BeginForm(tabPanelRecursiveAction, // запрос уходит на TabPanel
                  null,
                  new AjaxOptions()
                  {
                      HttpMethod = "POST",
                      InsertionMode = InsertionMode.Replace,
                      UpdateTargetId = tabPanelID // id обновляемого элемента
                                                  //,
                                                  //OnComplete = callbackEvent
                  },
                  new { id = tabStripId }))
            {
                @*Strip*@
                @Html.Action(this.Model.ControlAction, this.Model.ControlController, routStripValues)

                @Html.HiddenFor(m => m.SID)
            }
        }
    </div>
    <div class="@contentClass">
        @*Content*@
        @{
            if (hasChildPanel)
            {
                //Рекурсивное отображение вложенных TabPanel-ов
                Html.RenderAction(tabPanelRecursiveAction, tabPanelRecursiveController, routPanelValues);
            }
            else
            {
                // Отображение формы для содержимого последнего TabPanel-a
                using (Ajax.BeginForm(this.Model.ContentAction, this.Model.ContentController,
                          null,
                          new AjaxOptions()
                          {
                              HttpMethod = "POST",
                              InsertionMode = InsertionMode.Replace,
                              UpdateTargetId = contentFormId // id обновляемого элемента
                                                             //,
                                                             //OnComplete = callbackEvent
                          },
                          new { id = contentFormId }))
                {
                    @*Отображение содержимого*@
                    @Html.Action(this.Model.ContentAction, this.Model.ContentController)

                    @Html.HiddenFor(m => m.SID)
                }
            }

        }
    </div>
</div>


@if (isFractalRoot){ @Html.Raw("</div>"); }
